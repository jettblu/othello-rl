import { stringFromBoard } from "@/helpers/gameplay";
import { IBoard } from "@/types";

export const x = 2, // signifies blank square: **MUST BE 2** because we use base 3 to serialize
  initialBoard: IBoard = [
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    1,
    0,
    x,
    x,
    x,
    x,
    x,
    x,
    0,
    1,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
    x,
  ],
  codeChars = `234567bcdfghjkmnpqrstvwxyz-`,
  codeCharHash = Object.fromEntries(codeChars.split("").map((x, i) => [x, i])),
  initialBoardStr = stringFromBoard(initialBoard),
  defaultRoute = `/0/${initialBoardStr}/-/0`, // = no cell names, initial board, no previous piece, black to start
  players = [
    { name: "Black", colour: "#000" },
    { name: "White", colour: "#fff" },
  ],
  emptyTile = 2,
  directions = [-1, 0, 1].flatMap((d) =>
    (d === 0 ? [-1, 1] : [-1, 0, 1]).map((r) => ({
      downwards: d,
      rightwards: r,
    }))
  ),
  initialGameConfig = {
    boardStr: initialBoardStr,
    lastPieceStr: "-",
    turnStr: "0",
  };

// https://jawj.github.io/fliptiles/#!/4/------k-zmzkkwkqk-px-q/56/0

export const DEFAULT_BACKEND_URL = "http://127.0.0.1:8080";
export const DEFAULT_BACKEND_HOST = "127.0.0.1:8080";
